// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int                @id @default(autoincrement())
  username          String
  passwordHash      String
  pets              Pet[]
  hospitalNotes     HospitalNote[]
  hospitalFavorites HospitalFavorite[]
}

model Pet {
  id          Int          @id @default(autoincrement())
  user        User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      Int
  name        String
  species     String
  breed       String
  image       String
  dob         String
  diets       Diet[]
  medications Medication[]
}

model Diet {
  id        Int    @id @default(autoincrement())
  pet       Pet    @relation(fields: [petId], references: [id], onDelete: Cascade)
  petId     Int
  name      String
  amount    String
  frequency String
}

model Medication {
  id        Int     @id @default(autoincrement())
  pet       Pet     @relation(fields: [petId], references: [id], onDelete: Cascade)
  petId     Int
  name      String
  amount    String
  frequency String
  note      String?
}

model Hospital {
  id        Int                @id @default(autoincrement())
  name      String
  phone     String
  address   String
  image     String
  website   String
  notes     HospitalNote[]
  favorites HospitalFavorite[]
}

model HospitalNote {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int
  hospital   Hospital @relation(fields: [hospitalId], references: [id], onDelete: Cascade)
  hospitalId Int
  note       String
}

model HospitalFavorite {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int
  hospital   Hospital @relation(fields: [hospitalId], references: [id], onDelete: Cascade)
  hospitalId Int
}
